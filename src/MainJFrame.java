/*
 * BF2 Launcher
 * MainJFrame.java
 * Copyright (C) 2009 Ricky Hewitt.
 *
 * Licensed under the GNU GPL version 3.
 * See http://www.gnu.org/licenses/ for
 * more information.
 *
 * Created on 12 July 2009, 14:11
 */

package javabf2launcher;

import java.io.*;
import java.util.prefs.BackingStoreException;
import javax.swing.*;

/**
 * @author Ricky Hewitt [kahrny@gmail.com]
 * The MainJFrame class is responsible for the main gui
 * of BF2 Launcher.
 */
public class MainJFrame extends javax.swing.JFrame {
    
    /** Creates new form MainJFrame */
    public MainJFrame() {
        initComponents();
        
        /* Check to see if development options
         * should be enabled */
        File bf2r = new File(Main.bf2folder + "\\BF2_r.exe");
        if (bf2r.exists()) {
            jComboBoxMod.addItem("BF2 Debug");
            jLabel5.setText("");
        }
        
        // Check for mods
        if (Main.checkMod("xpack")) { jComboBoxMod.addItem("BF2 SF"); }
        if (Main.checkMod("pr")) { jComboBoxMod.addItem("Project Reality"); }

        // Check for video configuration
        if (Video.videoWidth != 0 && Video.videoHeight != 0) {
            // Set values based upon config
            jTextFieldVideoWidth.setText(String.valueOf(Video.videoWidth));
            jTextFieldVideoHeight.setText(String.valueOf(Video.videoHeight));
        }

        if (Video.refreshRate != 0) { jTextFieldRefreshRate.setText(String.valueOf(Video.refreshRate)); }

        // Set video qualities
        jSliderTerrainQuality.setValue(Video.terrainQuality);
        jSliderGeometryQuality.setValue(Video.geometryQuality);
        jSliderLightingQuality.setValue(Video.lightingQuality);
        jSliderEffectsQuality.setValue(Video.effectsQuality);

        // Set fps checkbox
        if (GenericConfig.drawFps > 0) {
            jCheckBoxDrawFps.setSelected(Main.intToBool(GenericConfig.drawFps));
        }

        // Set audio values
        jCheckBoxEnableEAX.setSelected(Main.intToBool(Audio.enableEAX));
        jCheckBoxEnableVoIP.setSelected(Main.intToBool(Audio.voipEnabled));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jComboBoxMod = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jCheckBoxEnableFullscreen = new javax.swing.JCheckBox();
        jCheckBoxDisableMovies = new javax.swing.JCheckBox();
        jCheckBoxLowPriority = new javax.swing.JCheckBox();
        jCheckBoxDrawFps = new javax.swing.JCheckBox();
        jCheckBoxMultipleInstances = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jTextFieldVideoWidth = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldVideoHeight = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jSliderTerrainQuality = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSliderGeometryQuality = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        jSliderLightingQuality = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        jSliderEffectsQuality = new javax.swing.JSlider();
        jPanel10 = new javax.swing.JPanel();
        jTextFieldRefreshRate = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jCheckBoxDisableSound = new javax.swing.JCheckBox();
        jCheckBoxEnableEAX = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        jCheckBoxEnableVoIP = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jCheckBoxPreload = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jCheckBoxDebugPython = new javax.swing.JCheckBox();
        jCheckBoxDebug = new javax.swing.JCheckBox();
        jCheckBoxDisableFlash = new javax.swing.JCheckBox();
        jCheckBoxDebugFlash = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabelAboutUrl = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("kahrn's bf2launcher " + Main.getVersionAsString());
        setResizable(false);

        jTabbedPane1.setToolTipText("");

        jPanel1.setMaximumSize(new java.awt.Dimension(360, 286));

        jButton1.setText("Launch!");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jComboBoxMod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BF2" }));
        jComboBoxMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxModActionPerformed(evt);
            }
        });

        jLabel2.setText("Mod:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javabf2launcher/bf2.gif"))); // NOI18N
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel4.setAutoscrolls(true);

        jButton3.setText("Server / IP");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("User / Pass");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel13.setAutoscrolls(true);

        jCheckBoxEnableFullscreen.setSelected(true);
        jCheckBoxEnableFullscreen.setText("Fullscreen");
        jCheckBoxEnableFullscreen.setToolTipText("Run BF2 fullscreen/windowed.");
        jCheckBoxEnableFullscreen.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxEnableFullscreen.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCheckBoxDisableMovies.setText("Disable intro movies");
        jCheckBoxDisableMovies.setToolTipText("Disable the BF2 opening videos.");
        jCheckBoxDisableMovies.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxDisableMovies.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCheckBoxLowPriority.setText("Low Priority");
        jCheckBoxLowPriority.setToolTipText("Run BF2 with a lower process priority, using less cpu. Will result in poorer performance.");
        jCheckBoxLowPriority.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxLowPriority.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCheckBoxDrawFps.setText("Draw FPS");
        jCheckBoxDrawFps.setAutoscrolls(true);

        jCheckBoxMultipleInstances.setText("Multiple Instances");
        jCheckBoxMultipleInstances.setToolTipText("Allow multiple copies of BF2 to run at once.");
        jCheckBoxMultipleInstances.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxMultipleInstances.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel13Layout = new org.jdesktop.layout.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel13Layout.createSequentialGroup()
                        .add(jCheckBoxEnableFullscreen)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 55, Short.MAX_VALUE)
                        .add(jCheckBoxDrawFps))
                    .add(jCheckBoxDisableMovies)
                    .add(jCheckBoxLowPriority)
                    .add(jCheckBoxMultipleInstances))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jCheckBoxEnableFullscreen)
                    .add(jCheckBoxDrawFps))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxDisableMovies)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxLowPriority)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxMultipleInstances)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBoxMod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel13, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .add(jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jComboBoxMod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2))
                        .add(10, 10, 10)
                        .add(jPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(115, 115, 115))
        );

        jTabbedPane1.addTab("Main", jPanel1);

        jPanel2.setEnabled(false);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Resolution"));

        jLabel6.setText("x");

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jTextFieldVideoWidth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextFieldVideoHeight, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldVideoWidth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(jTextFieldVideoHeight, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Quality Settings"));

        jSliderTerrainQuality.setMajorTickSpacing(1);
        jSliderTerrainQuality.setMaximum(3);
        jSliderTerrainQuality.setMinimum(1);
        jSliderTerrainQuality.setPaintTicks(true);
        jSliderTerrainQuality.setSnapToTicks(true);

        jLabel7.setText("Terrain Quality:");

        jLabel8.setText("Geometry Quality:");

        jSliderGeometryQuality.setMajorTickSpacing(1);
        jSliderGeometryQuality.setMaximum(3);
        jSliderGeometryQuality.setMinimum(1);
        jSliderGeometryQuality.setPaintTicks(true);
        jSliderGeometryQuality.setSnapToTicks(true);

        jLabel9.setText("Lighting Quality:");

        jSliderLightingQuality.setMajorTickSpacing(1);
        jSliderLightingQuality.setMaximum(3);
        jSliderLightingQuality.setMinimum(1);
        jSliderLightingQuality.setPaintTicks(true);
        jSliderLightingQuality.setSnapToTicks(true);

        jLabel10.setText("Effects Quality:");

        jSliderEffectsQuality.setMajorTickSpacing(1);
        jSliderEffectsQuality.setMaximum(3);
        jSliderEffectsQuality.setMinimum(1);
        jSliderEffectsQuality.setPaintTicks(true);
        jSliderEffectsQuality.setSnapToTicks(true);

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel9Layout.createSequentialGroup()
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSliderLightingQuality, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 34, Short.MAX_VALUE)
                        .add(jLabel10)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSliderEffectsQuality, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel9Layout.createSequentialGroup()
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSliderTerrainQuality, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(24, 24, 24)
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSliderGeometryQuality, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel7)
                    .add(jSliderGeometryQuality, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8)
                    .add(jSliderTerrainQuality, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel9)
                    .add(jSliderLightingQuality, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10)
                    .add(jSliderEffectsQuality, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Refresh Rate"));

        jLabel11.setText("Hz");

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .add(jTextFieldRefreshRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel11)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldRefreshRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel11))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Graphics", jPanel2);

        jPanel3.setEnabled(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Sound"));
        jPanel6.setAutoscrolls(true);

        jCheckBoxDisableSound.setText("Disable Sound");
        jCheckBoxDisableSound.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxDisableSound.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCheckBoxEnableEAX.setText("Enable EAX");

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jCheckBoxDisableSound)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jCheckBoxEnableEAX)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jCheckBoxDisableSound)
                .add(jCheckBoxEnableEAX))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("VoIP"));

        jCheckBoxEnableVoIP.setText("Enable VoIP");

        org.jdesktop.layout.GroupLayout jPanel11Layout = new org.jdesktop.layout.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .add(jCheckBoxEnableVoIP)
                .addContainerGap(239, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jCheckBoxEnableVoIP)
        );

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel11, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sound", jPanel3);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Misc"));
        jPanel12.setPreferredSize(new java.awt.Dimension(224, 50));

        jCheckBoxPreload.setSelected(true);
        jCheckBoxPreload.setText("Preload Resources");
        jCheckBoxPreload.setToolTipText("Preload resources. Default is enabled.");

        org.jdesktop.layout.GroupLayout jPanel12Layout = new org.jdesktop.layout.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .add(jCheckBoxPreload)
                .addContainerGap(199, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .add(jCheckBoxPreload, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Debug")));
        jPanel7.setAutoscrolls(true);

        jCheckBoxDebugPython.setText("Verbose Python");
        jCheckBoxDebugPython.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxDebugPython.setEnabled(false);
        jCheckBoxDebugPython.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCheckBoxDebug.setText("Debug");
        jCheckBoxDebug.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxDebug.setEnabled(false);
        jCheckBoxDebug.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCheckBoxDisableFlash.setText("Disable flash");
        jCheckBoxDisableFlash.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxDisableFlash.setEnabled(false);
        jCheckBoxDisableFlash.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCheckBoxDebugFlash.setText("Debug flash");
        jCheckBoxDebugFlash.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxDebugFlash.setEnabled(false);
        jCheckBoxDebugFlash.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel5.setText("Debug options require BF2_r.exe and the BF2 Editor.");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jCheckBoxDebug)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxDebugFlash)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxDisableFlash)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxDebugPython))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .add(jLabel5)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jCheckBoxDebug)
                    .add(jCheckBoxDebugFlash)
                    .add(jCheckBoxDisableFlash)
                    .add(jCheckBoxDebugPython))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel5))
        );

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(230, 230, 230))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Misc", null, jPanel4, "null");

        jLabel1.setText("<html>bf2launcher " + Main.getVersionAsString() + "<br>BF2 launcher is an application to configure BF2 before runtime.</html>");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javabf2launcher/avatar.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.setMaximumSize(new java.awt.Dimension(64, 64));
        jLabel3.setMinimumSize(new java.awt.Dimension(48, 48));
        jLabel3.setPreferredSize(new java.awt.Dimension(64, 64));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jButton2.setText("Clear Settings");
        jButton2.setToolTipText("Clear all settings saved by bf2launcher.");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabelAboutUrl.setText("<html><a href=\"http://bf2launcher.sourceforge.net\">http://bf2launcher.sourceforge.net</a></html>");
        jLabelAboutUrl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAboutUrlMouseClicked(evt);
            }
        });

        jLabel12.setText("<html>Developed by:<br /><blockquote>Ricky Hewitt &lt;ricky.hewitt@gmail.com&gt;</blockquote></html>");

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jLabel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                        .add(111, 111, 111))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabelAboutUrl)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton2))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabelAboutUrl))
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(jButton2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("About", jPanel5);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 365, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxModActionPerformed
        /** This is called when the mod combo selection box is modified
         *  to configure BF2-debug related options.
         */
        System.out.println(jComboBoxMod.getSelectedItem().toString());
        /** Reset the debug options **/
        if (jComboBoxMod.getSelectedItem().toString() == "BF2 Debug") {
            jCheckBoxDebug.setEnabled(true);
            jCheckBoxDebugFlash.setEnabled(true);
            jCheckBoxDebugPython.setEnabled(true);
            jCheckBoxDisableFlash.setEnabled(true);
            Main.bf2exe = "BF2_r.exe";
        }
        else { 
            Main.bf2exe = "BF2.exe"; 
            jCheckBoxDebug.setEnabled(false);
            jCheckBoxDebugFlash.setEnabled(false);
            jCheckBoxDebugPython.setEnabled(false);
            jCheckBoxDisableFlash.setEnabled(false);
        }
        
    }//GEN-LAST:event_jComboBoxModActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // Navigate to homepage
        Main.openURL("http://kahrn.wordpress.com");
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        /* This is the code for the launch button
         * and deals with configuring the configuration files
         * and launching the correct mod.
         */
        String exeArguments = "";
        // Check and assign mod
        if (jComboBoxMod.getSelectedItem().toString() != "BF2") {
            if (jComboBoxMod.getSelectedItem().toString() == "BF2 Debug") {
                Main.bf2exe = "BF2_r.exe";
            }
            else { Main.bf2exe = "BF2.exe"; }

            if (jComboBoxMod.getSelectedItem().toString() == "BF2 SF") {
                exeArguments = "+modPath mods/xpack";
            }

            if (jComboBoxMod.getSelectedItem().toString() == "Project Reality") {
                exeArguments = "+modPath mods/pr";
            }
        }

        // Write new generic config
        {
            GenericConfig.drawFps = jCheckBoxDrawFps.isSelected()? 1 : 0; // bool to int
            GenericConfig.writeConfig(Main.bf2profilepath + "\\0001\\General.con");
        }

        // Write new video config
        if (jTextFieldVideoWidth.getText() != "" && jTextFieldVideoHeight.getText() != "") {
            Video.videoWidth = Integer.parseInt(jTextFieldVideoWidth.getText());
            Video.videoHeight = Integer.parseInt(jTextFieldVideoHeight.getText());
            // Set qualities
            Video.terrainQuality = jSliderTerrainQuality.getValue();
            Video.geometryQuality = jSliderGeometryQuality.getValue();
            Video.lightingQuality = jSliderLightingQuality.getValue();
            Video.effectsQuality = jSliderEffectsQuality.getValue();
            Video.writeConfig(Main.bf2profilepath + "0001\\Video.con");
        }

        // Write new audio config
        {
            Audio.enableEAX = jCheckBoxEnableEAX.isSelected()? 1 : 0; // bool to int
            Audio.voipEnabled = jCheckBoxEnableVoIP.isSelected()? 1 : 0; // bool to int
            Audio.writeConfig(Main.bf2profilepath + "\\0001\\Audio.con");
        }

        /* Build argument list */
        String newExeArguments = selectExeArguments();
        exeArguments += newExeArguments;

        // Output bf2 path and arguments
        System.out.println(Main.bf2folder + "\\" + Main.bf2exe + "\" " + exeArguments);

        // Minimize application window
        Main.newTray.hideInTray();
        
        // Attempt to launch BF2
        try {
            Process exec = Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL \"" + Main.bf2folder + "\\" + Main.bf2exe + "\" " + exeArguments + "\"", null, new File(Main.bf2folder));
        }
        catch (IOException ex) {
            Main.logError(ex.getStackTrace().toString());
            // Show the application window
            Main.newTray.showFromTray();
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        /** Clear the preferences from the prefs api **/
        try {
            Main.prefs.clear();
            JOptionPane.showMessageDialog(Main.newJFrame, "Preferences cleared.", "Preferences", JOptionPane.INFORMATION_MESSAGE);
        } catch (BackingStoreException ex) {
            ex.printStackTrace();
        }
}//GEN-LAST:event_jButton2ActionPerformed

    /** Browse to sf page when link clicked **/
    private void jLabelAboutUrlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAboutUrlMouseClicked
        // Navigate to homepage
        Main.openURL("http://bf2launcher.sourceforge.net");
    }//GEN-LAST:event_jLabelAboutUrlMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JFrame UsernameFrame = new UsernameFrame();
        UsernameFrame.setVisible(true);
        UsernameFrame.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Load the username panel
        JFrame ServerFrame = new ServerFrame();
        ServerFrame.setVisible(true);
        ServerFrame.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton3ActionPerformed

    /** Calculates the arguments to add based upon checkbox input **/
    private String selectExeArguments() {
        String exeArguments = "";

        // Check for server IP and port
        if (Main.serverIP != "" && Main.serverPort != "") {
            exeArguments += " +joinServer " + Main.serverIP + " +port " + Main.serverPort;
        }

        // Check for username and password
        if (Main.username != "" && Main.password != "") {
            exeArguments += " +playerName " + Main.username + " +playerPassword " + Main.password;
        }
        
        // Check for fullscreen
        if (jCheckBoxEnableFullscreen.isSelected()) {
            exeArguments += " +fullscreen 1";
        }
        
        else { exeArguments += " +fullscreen 0"; }
        
        // Check for video
        if (jCheckBoxDisableMovies.isSelected()) {
            exeArguments += " +restart 0";
        }
        
        // Check for low priority
        if (jCheckBoxLowPriority.isSelected()) {
            exeArguments += " +lowPriority";
        }            
        
        // Check for multiple instances
        if (jCheckBoxMultipleInstances.isSelected()) {
            exeArguments += " +multi";
        }

        // Check for noSound
        if (jCheckBoxDisableSound.isSelected()) {
            exeArguments += " +noSound 1";
        }

        // Check for resource late loading
        if (!jCheckBoxPreload.isSelected()) {
            exeArguments += " +lateLoading 1";
        }
        
        // The arguments below apply for development only (require BF2_r.exe)
        // Check for developer options
        if (jCheckBoxDebug.isSelected() || jCheckBoxDebugPython.isSelected() || jCheckBoxDebugFlash.isSelected()) {
            exeArguments += " +developer 1";
        }     
        
        // Check for debug
        if (jCheckBoxDebug.isSelected()) {
            exeArguments += " +debugOutput";
        }
        
        // Check for python verbosity
        if (jCheckBoxDebugPython.isSelected()) {
            exeArguments += " +pyVerbose";
        }     
        
        // Check for flash debug
        if (jCheckBoxDebugFlash.isSelected()) {
            exeArguments += " +debugSwiff";
        }     
        
        // Check for flash disable
        if (jCheckBoxDisableFlash.isSelected()) {
            exeArguments += " +disableSwiff";
        }     
        
        return exeArguments;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBoxDebug;
    private javax.swing.JCheckBox jCheckBoxDebugFlash;
    private javax.swing.JCheckBox jCheckBoxDebugPython;
    private javax.swing.JCheckBox jCheckBoxDisableFlash;
    private javax.swing.JCheckBox jCheckBoxDisableMovies;
    private javax.swing.JCheckBox jCheckBoxDisableSound;
    private javax.swing.JCheckBox jCheckBoxDrawFps;
    private javax.swing.JCheckBox jCheckBoxEnableEAX;
    private javax.swing.JCheckBox jCheckBoxEnableFullscreen;
    private javax.swing.JCheckBox jCheckBoxEnableVoIP;
    private javax.swing.JCheckBox jCheckBoxLowPriority;
    private javax.swing.JCheckBox jCheckBoxMultipleInstances;
    private javax.swing.JCheckBox jCheckBoxPreload;
    private javax.swing.JComboBox jComboBoxMod;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAboutUrl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSlider jSliderEffectsQuality;
    private javax.swing.JSlider jSliderGeometryQuality;
    private javax.swing.JSlider jSliderLightingQuality;
    private javax.swing.JSlider jSliderTerrainQuality;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldRefreshRate;
    private javax.swing.JTextField jTextFieldVideoHeight;
    private javax.swing.JTextField jTextFieldVideoWidth;
    // End of variables declaration//GEN-END:variables
    
}
